---
- name: Setup dotfiles and development environment
  hosts: all
  gather_facts: true
  tasks:
    # ==== macOS setup tasks ====
    - name: Install macOS packages with Homebrew
      community.general.homebrew:
        name:
          - python
          - ansible
          - ansible-lint
          - bat
          - eza
          - fd
          - fish
          - fzf
          - gcc
          - gh
          - git
          - htop
          - lazygit
          - neovim
          - opentofu
          - podlet
          - podman
          - podman-tui
          - ripgrep
          - tealdeer
          - tmux
          - uv
        state: present
      when: ansible_facts['os_family'] == 'Darwin'

    - name: Install macOS casks with Homebrew
      community.general.homebrew_cask:
        name:
          - ghostty
        state: present
      when: ansible_facts['os_family'] == 'Darwin'

    # ==== Fedora setup tasks ====
    - name: Enable COPR repositories
      community.general.copr:
        name: "{{ item }}"
        state: enabled
      loop:
        - pgdev/ghostty
        - atim/lazygit
      become: true
      when: ansible_facts['distribution'] == 'Fedora'

    - name: Install Fedora packages
      ansible.builtin.dnf:
        name:
          - lazygit
          - tealdeer
          - bat
          - eza
          - fish
          - htop
          - tmux
          - fzf
          - neovim
          - ripgrep
          - fd-find
          - gcc
          - podlet
          - podman-tui
          - gh
          - opentofu
          - uv
          - ghostty
          - ansible-lint
          - direnv
        state: present
      become: true
      when: ansible_facts['distribution'] == 'Fedora'

    # ==== Common tasks for both OS ====
    - name: Create config directories
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.config/{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - fish
        - tmux
        - bat
        - bat/themes
        - ghostty
        - eza

    # Copy config files
    - name: Copy fish config files
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/config/fish/"
        dest: "{{ ansible_env.HOME }}/.config/fish/"
        mode: '0644'

    - name: Copy bat config files
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/config/bat/"
        dest: "{{ ansible_env.HOME }}/.config/bat/"
        mode: '0644'
    - name: Copy tmux config
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/config/tmux/tmux.conf"
        dest: "{{ ansible_env.HOME }}/.config/tmux/tmux.conf"
        mode: '0644'

    - name: Copy ghostty config
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/config/ghostty/config"
        dest: "{{ ansible_env.HOME }}/.config/ghostty/config"
        mode: '0644'

    # Update fish path in tmux.conf for macOS
    - name: Update fish path in tmux config - macOS
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.config/tmux/tmux.conf"
        regexp: '^set -g default-shell.*'
        line: 'set -g default-shell /opt/homebrew/bin/fish'
      when: ansible_facts['os_family'] == 'Darwin'

    # Update fish path in ghostty config for macOS
    - name: Update fish path in ghostty config - macOS
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.config/ghostty/config"
        regexp: '^command =.*'
        line: 'command = /opt/homebrew/bin/fish'
      when: ansible_facts['os_family'] == 'Darwin'

    # LazyVim setup
    - name: Clone LazyVim starter
      ansible.builtin.git:
        repo: https://github.com/LazyVim/starter
        dest: "{{ ansible_env.HOME }}/.config/nvim"
        clone: true
        force: true
        update: no

    - name: Remove .git directory from LazyVim
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.config/nvim/.git"
        state: absent

    # TokyoNight theme symlinks
    - name: Create symlink for bat TokyoNight theme
      ansible.builtin.file:
        src: "{{ ansible_env.HOME }}/.local/share/nvim/lazy/tokyonight.nvim/extras/sublime/tokyonight_night.tmTheme"
        dest: "{{ ansible_env.HOME }}/.config/bat/themes/tokyonight_night.tmTheme"
        state: link
        force: true

    - name: Create symlink for eza TokyoNight theme
      ansible.builtin.file:
        src: "{{ ansible_env.HOME }}/.local/share/nvim/lazy/tokyonight.nvim/extras/eza/tokyonight.yml"
        dest: "{{ ansible_env.HOME }}/.config/eza/tokyonight.yml"
        state: link
        force: true

    # Build bat cache
    - name: Build bat cache
      ansible.builtin.command: bat cache --build
      changed_when: false
